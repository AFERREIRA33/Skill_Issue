//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Player/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player_Map"",
            ""id"": ""30e93e26-7ff4-4270-80e9-b1533b34c7cc"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""ac4fc5f2-08f2-4972-8f23-cf7e1176773b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""11107a0b-22fe-42db-93e1-060579c5936a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""596094dd-7372-4a2a-a3d3-7f5e7c49b353"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""f0ef4512-97b3-4a26-aa9b-678ef87898ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Guard"",
                    ""type"": ""Button"",
                    ""id"": ""b03e03e0-59a8-4131-9da1-3d3584945a41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activable"",
                    ""type"": ""Button"",
                    ""id"": ""218d0830-2bd4-4c6c-9312-c7b145176302"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CAC"",
                    ""type"": ""Button"",
                    ""id"": ""c2ece05b-584e-46b5-a692-012ca6946d03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4f22bf1f-6896-4e05-948e-62a8fb60079f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""af9b9ce4-5ac7-4f6a-a646-63e6ba6f4f02"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b3614682-3392-4100-b372-bf8163b8c1d2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""07ac9f34-260e-4127-9e16-b916e2668e76"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e575d1ca-1b1a-46b9-a3ef-a3409daaa97b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""49af2e1f-4da3-4c69-b60a-ae594876b61b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7c93879b-8ee7-48b0-86ed-5e0b56cf41d0"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d144d7ac-1b72-467b-ac98-ff06f2897d37"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""df68af47-a0e7-48fb-858f-a7f857a9f8f9"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e4270d6e-3743-437b-9663-af8fbacee879"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3682cb8b-d4e6-4b76-86e5-2c69b456111e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6dd883a9-640f-4d1d-937d-410fa86f6ad9"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""165ee7a4-0a52-4e9f-a72f-1c4cadc8e9db"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""602871ba-0344-4be2-ba05-44b6d02e405d"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Guard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0dc3e6b7-163d-4467-9f36-b8c92b897510"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Guard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2a07cf0-3716-4466-b105-afc59a0cb06c"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0dc60fb-989c-48fa-a8ce-a962136c7231"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87ca6df3-b309-4900-9cc7-1d16ce48b413"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CAC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""915bfaab-5b74-459c-9fe5-a623a99f5bbe"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CAC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player_Map
        m_Player_Map = asset.FindActionMap("Player_Map", throwIfNotFound: true);
        m_Player_Map_Movement = m_Player_Map.FindAction("Movement", throwIfNotFound: true);
        m_Player_Map_Fire = m_Player_Map.FindAction("Fire", throwIfNotFound: true);
        m_Player_Map_Rotation = m_Player_Map.FindAction("Rotation", throwIfNotFound: true);
        m_Player_Map_Dash = m_Player_Map.FindAction("Dash", throwIfNotFound: true);
        m_Player_Map_Guard = m_Player_Map.FindAction("Guard", throwIfNotFound: true);
        m_Player_Map_Activable = m_Player_Map.FindAction("Activable", throwIfNotFound: true);
        m_Player_Map_CAC = m_Player_Map.FindAction("CAC", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player_Map
    private readonly InputActionMap m_Player_Map;
    private IPlayer_MapActions m_Player_MapActionsCallbackInterface;
    private readonly InputAction m_Player_Map_Movement;
    private readonly InputAction m_Player_Map_Fire;
    private readonly InputAction m_Player_Map_Rotation;
    private readonly InputAction m_Player_Map_Dash;
    private readonly InputAction m_Player_Map_Guard;
    private readonly InputAction m_Player_Map_Activable;
    private readonly InputAction m_Player_Map_CAC;
    public struct Player_MapActions
    {
        private @PlayerInput m_Wrapper;
        public Player_MapActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Map_Movement;
        public InputAction @Fire => m_Wrapper.m_Player_Map_Fire;
        public InputAction @Rotation => m_Wrapper.m_Player_Map_Rotation;
        public InputAction @Dash => m_Wrapper.m_Player_Map_Dash;
        public InputAction @Guard => m_Wrapper.m_Player_Map_Guard;
        public InputAction @Activable => m_Wrapper.m_Player_Map_Activable;
        public InputAction @CAC => m_Wrapper.m_Player_Map_CAC;
        public InputActionMap Get() { return m_Wrapper.m_Player_Map; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player_MapActions set) { return set.Get(); }
        public void SetCallbacks(IPlayer_MapActions instance)
        {
            if (m_Wrapper.m_Player_MapActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnMovement;
                @Fire.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnFire;
                @Rotation.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnRotation;
                @Rotation.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnRotation;
                @Rotation.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnRotation;
                @Dash.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnDash;
                @Guard.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnGuard;
                @Guard.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnGuard;
                @Guard.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnGuard;
                @Activable.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnActivable;
                @Activable.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnActivable;
                @Activable.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnActivable;
                @CAC.started -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnCAC;
                @CAC.performed -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnCAC;
                @CAC.canceled -= m_Wrapper.m_Player_MapActionsCallbackInterface.OnCAC;
            }
            m_Wrapper.m_Player_MapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Guard.started += instance.OnGuard;
                @Guard.performed += instance.OnGuard;
                @Guard.canceled += instance.OnGuard;
                @Activable.started += instance.OnActivable;
                @Activable.performed += instance.OnActivable;
                @Activable.canceled += instance.OnActivable;
                @CAC.started += instance.OnCAC;
                @CAC.performed += instance.OnCAC;
                @CAC.canceled += instance.OnCAC;
            }
        }
    }
    public Player_MapActions @Player_Map => new Player_MapActions(this);
    public interface IPlayer_MapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnGuard(InputAction.CallbackContext context);
        void OnActivable(InputAction.CallbackContext context);
        void OnCAC(InputAction.CallbackContext context);
    }
}
